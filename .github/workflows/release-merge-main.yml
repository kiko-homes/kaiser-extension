name: Build release extensions
'on':
  push:
    branches:
      - main
jobs:
  create_release:
    name: Create an extension release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    environment:
      name: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Node setup
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build
        env:
          INLINE_RUNTIME_CHUNK: false
          REACT_APP_APP_HOST: '${{ secrets.FIREBASE_APP_ID }}'
          REACT_APP_FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
          REACT_APP_FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'
          REACT_APP_FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'
          REACT_APP_FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'
          REACT_APP_FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'
          REACT_APP_FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'
      - name: Copy manifest
        run: cp ./src/manifest.release.json ./build/manifest.json
      - name: Package build
        run: zip -r kaiser.zip build

      - name: Version increase and tag creation
        id: version_increase
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix: 'v'
          bump-policy: last-commit
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'kaizer.zip'
          tag: ${{ steps.version_increase.outputs.newTag }}
          token: ${{ secrets.GITHUB_TOKEN }}
